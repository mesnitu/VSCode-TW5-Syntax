<!-- tiddlywiki5 -->
\procedure saveNewWikiActions()
    \procedure saveNewWikiCallback()
        \procedure failureHandler()
        <$action-log status="error saving new wiki to the server"/>
        <$action-setfield $tiddler={{{ [[$:/temp/webdav/error/]addsuffix<now [UTC]YYYY0MM0DD0hh0mm0ssXXX]>] }}} text={{{ [[There was an error creating the new wiki. ]addsuffix<error>] }}} component="WebDAV save new wiki" tags="$:/tags/Alert"/>
        \end failureHandler
    <$list filter="201 204 :intersection[<status>]" variable="null" emptyMessage=<<saveNewWikiCallbackFailure>> >
        <$action-sendmessage $message="tm-notify" $param="$:/plugins/sq/webdav-utils/ui/templates/wiki-created" path=<<destinationURL>> />
        <$action-deletetiddler $filter="$:/temp/sq/fs/new-wiki-template-url $:/temp/sq/fs/new-wiki-name"/>
        <$action-sendmessage $message="tm-webdav-ls" $param={{{ [<destinationURL>split[/]butlast[]join[/]trim[/]!is[blank]addsuffix[/]addprefix[/]] :else[[/]] }}} />
    </$list>
    \end saveNewWikiCallback
<$wikify name="myplugins" text={{$:/plugins/sq/webdav-utils/templates/new-wiki-plugins}}>
    <$action-sendmessage
        $message="tm-http-request"
        method="PUT"
        bind-status="$:/state/webdav/http-status"
        oncompletion=<<saveNewWikiCallback>>
        url=<<destinationURL>>
        body={{{ [<data>addprefix<myplugins>] }}}
        var-destinationURL=<<destinationURL>>
        >
</$wikify>
\end saveNewWikiActions


\import [[test]]
\define myMacro1(param:test, param:"""Test""", param: [[Test]]) test $test$ $(fnord)$

\define myMacro2(param:test, param:"""Test""", param: [[Test]])
\define myMacro3(param:test, param:"""Test""", param: [[Test]])
test $param$ [[WikiText]] $test$ $(fnord)$
\end myMacro3

test $param$ [[WikiText]] $test$ $(fnord)$
\end myMacro2

\function my.function1(parameter:"2") [<parameter>multiply[1.5]]
\function my.function2(parameter:"2")
[<parameter>multiply[1.5]]
\end

\define myMacro()
\function my.nested.function(parameter:"2")
[<parameter>multiply[1.5]]
\end my.nested.function

$test$ $test$ $(fnord)$

  <unrecognized></unrecognized>
  <$widget attribute="value" a={{b}} a=<<c>> > content with a [[Title]] </$widget>

* $ $ $test$
* ''multiline'' body
* {{{  [operator1:suffix1[tiddler $test$ ${n}$ $(fnord)$ title]operator2:suffix2<variable name>operator3:suffix3{text!!reference}] }}}
* <tag attr={{tiddler!!field}}/>

	<tag attr={{tiddler!!field}}/>

<tag attr={{tiddler!!field}}/>

This paragraph ends here.
\end
\rules only html dash entity
\rules
\whitespace trim
\whitespace notrim
\import [filter[expression]]
\parameters(firstname:Joe,middlename:'fnord'lastname:"Blogs")
\function my-function(parameter:"2")
[<parameter>multiply[1.5]]
\end

<!-- start nested procedure block -->
\procedure my.procedure()
\function my-function(parameter:"2")
[<parameter>multiply[1.5]]
\end

\procedure my.procedure2() [[test]] $test$ ${n}$ $(fnord)$ <!-- no substitute filters here -->
\procedure my.procedure3()

[[title]]

\end my.procedure3
\widget $my.widget1(attribute:"Default value")
\function my.function1(parameter:"2") [<parameter>multiply[1.5]]
\function my-function(parameter:"2")
[<parameter>multiply[1.5]]
\end my-function
This is the widget, and the attribute is <<attribute>>. $test$ ${n}$ $(fnord)$  <!-- no substitute filters here -->

\end $my.widget1


$(n)$
\end my.procedure
<!-- end nested procedure block-->

\widget $my.widget(attribute:"Default value")

\widget $my.widget1(attribute:"Default value")
This is the widget, and the attribute is <<attribute>>.
\end $my.widget1

This is the widget, and the attribute is <<attribute>>.
\end

\define macroName (param: "default")
$param$ $(extVar)$ $:/core/system/tiddler/title
\end

\define special-button(caption:"Click me")
\define actions()
<$action-sendmessage $message="tm-notify" $param="HelloThere"/>
\end actions
<$button actions=<<actions>>>
$caption$
</$button>
\end special-button

<<special-button>>